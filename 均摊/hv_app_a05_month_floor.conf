sql="
use ${HIVE_DB_APP};
set hive.exec.dynamic.partition.mode=nonstrict;
set hive.exec.max.dynamic.partitions=100000;
set hive.exec.max.dynamic.partitions.pernode=100000;
set hive.exec.parallel=true;
set hive.exec.parallel.thread.number=8;

with tmp_a05_month_contract as (
select 
 a.the_month                                          --年月                               
,b.projectguid                                        --项目guid
,b.companyguid                                        --公司guid
,b.blockid                                            --楼栋id
,b.blockname                                          --楼栋名称
,b.floorid                      as floor_id           --楼层id
,b.floor                                              --楼层名称
,sum(case when a.the_month = b.the_month then b.bd_income_y else '0' end)                as bd_income_y               --收入_含税保底租金收入
,sum(case when a.year_str = substr(b.the_month,1,4) then b.bd_income_y else '0' end)     as bd_income_y_total         --累计收入_含税保底租金收入
,sum(case when a.the_month = b.the_month then b.taking_income_y else '0' end)            as taking_income_y           --收入_含税抽成租金收入
,sum(case when a.year_str = substr(b.the_month,1,4) then b.taking_income_y else '0' end) as taking_income_y_total     --累计收入_含税抽成租金收入
,sum(case when a.the_month = b.the_month then b.mng_income_y else '0' end)               as mng_income_y              --收入_含税物业管理费收入
,sum(case when a.year_str = substr(b.the_month,1,4) then b.mng_income_y else '0' end)    as mng_income_y_total        --累计收入_含税物业管理费收入
,sum(case when a.the_month = b.the_month then b.tg_income_y else '0' end)                as tg_income_y               --收入_含税推广服务费收入
,sum(case when a.year_str = substr(b.the_month,1,4) then b.tg_income_y else '0' end)     as tg_income_y_total         --累计收入_含税推广服务费收入
,sum(case when a.the_month = b.the_month then b.bd_income_n else '0' end)                as bd_income_n               --收入_不含税保底租金收入
,sum(case when a.year_str = substr(b.the_month,1,4) then b.bd_income_n else '0' end)     as bd_income_n_total         --累计收入_不含税保底租金收入
,sum(case when a.the_month = b.the_month then b.taking_income_n else '0' end)            as taking_income_n           --收入_不含税抽成租金收入
,sum(case when a.year_str = substr(b.the_month,1,4) then b.taking_income_n else '0' end) as taking_income_n_total     --累计收入_不含税抽成租金收入
,sum(case when a.the_month = b.the_month then b.mng_income_n else '0' end)               as mng_income_n              --收入_不含税物业管理费收入
,sum(case when a.year_str = substr(b.the_month,1,4) then b.mng_income_n else '0' end)    as mng_income_n_total        --累计收入_不含税物业管理费收入
,sum(case when a.the_month = b.the_month then b.tg_income_n else '0' end)                as tg_income_n               --收入_不含税推广服务费收入
,sum(case when a.year_str = substr(b.the_month,1,4) then b.tg_income_n else '0' end)     as tg_income_n_total         --累计收入_不含税推广服务费收入
,sum(case when a.the_month = b.the_month then b.saleamt else '0' end)                    as saleamt                       --营业额
,sum(case when a.year_str = substr(b.the_month,1,4) then b.saleamt else '0' end)         as saleamt_total                 --累计营业额
,sum(case when a.the_month = b.the_month then b.saleamt_zn else '0' end)                 as saleamt_zn                       --不含主力店营业额
,sum(case when a.year_str = substr(b.the_month,1,4) then b.saleamt_zn else '0' end)      as saleamt_zn_total                 --累计不含主力店营业额
from (
select 
a.year_str
,a.the_month
,a.month_int
from ${HIVE_DB_DIM}.pub_longfor_month a
where a.the_month>=substr(add_months('${START_DATEKEY}',-2),1,7)
and a.the_month<=substr('${END_DATEKEY}',1,7)
) a
left join 
(
select
  a.the_month                   --年月
 ,a.projectguid                 --项目guid
 ,a.companyguid                 --公司guid
 ,a.build_id as blockid         --楼栋id
 ,a.build_name as blockname     --楼栋名称
 ,a.floor_id as floorid         --楼层id
 ,a.floor_name as floor         --楼层名称
 ,sum(case when a.saleamt is not null or a.saleamt<>0 then a.saleamt else 0 end ) as saleamt                                  --营业额
 ,sum(case when a.bd_income_y is not null or a.bd_income_y<>0 then a.bd_income_y else 0 end)  as bd_income_y                  --收入_含税保底租金收入
 ,sum(case when a.taking_income_y is not null or a.taking_income_y<>0 then a.taking_income_y else 0 end ) as taking_income_y  --收入_含税抽成租金收入
 ,sum(case when a.mng_income_y is not null or a.mng_income_y<>0 then a.mng_income_y else 0 end ) as mng_income_y              --收入_含税物业管理费收入
 ,sum(case when a.tg_income_y is not null or a.tg_income_y<>0 then a.tg_income_y else 0 end ) as tg_income_y                  --收入_含税推广服务费收入
 ,sum(case when a.bd_income_n is not null or a.bd_income_n<>0 then a.bd_income_n else 0 end ) as bd_income_n                  --收入_不含税保底租金收入
 ,sum(case when a.taking_income_n is not null or a.taking_income_n<>0 then a.taking_income_n else 0 end ) as taking_income_n  --收入_不含税抽成租金收入
 ,sum(case when a.mng_income_n is not null or a.mng_income_n<>0 then a.mng_income_n else 0 end ) as mng_income_n              --收入_不含税物业管理费收入
 ,sum(case when a.tg_income_n is not null or a.tg_income_n<>0 then a.tg_income_n else 0 end ) as tg_income_n                  --收入_不含税推广服务费收入
 ,sum(case when a.saleamt_zn is not null or a.saleamt_zn<>0 then a.saleamt_zn else 0 end ) as saleamt_zn                      --不含主力店营业额
from
(select
 a.the_month
 ,a.projectguid
 ,a.companyguid
 ,a.build_id
 ,a.build_name
 ,a.floor_id
 ,a.floor_name
 ,b.contractid
 ,a.crent_area/sum(a.crent_area)over(partition by b.the_month,b.projectguid,b.contractid) as rate
 ,double(b.saleamt)*(a.crent_area/sum(a.crent_area)over(partition by b.the_month,b.projectguid,b.contractid)) as saleamt
 ,double(b.bd_income_y)*(a.crent_area/sum(a.crent_area)over(partition by b.the_month,b.projectguid,b.contractid)) as bd_income_y
 ,double(b.taking_income_y)*(a.crent_area/sum(a.crent_area)over(partition by b.the_month,b.projectguid,b.contractid)) as taking_income_y
 ,double(b.mng_income_y)*(a.crent_area/sum(a.crent_area)over(partition by b.the_month,b.projectguid,b.contractid)) as mng_income_y
 ,double(b.tg_income_y)*(a.crent_area/sum(a.crent_area)over(partition by b.the_month,b.projectguid,b.contractid)) as tg_income_y
 ,double(b.bd_income_n)*(a.crent_area/sum(a.crent_area)over(partition by b.the_month,b.projectguid,b.contractid)) as bd_income_n
 ,double(b.taking_income_n)*(a.crent_area/sum(a.crent_area)over(partition by b.the_month,b.projectguid,b.contractid)) as taking_income_n
 ,double(b.mng_income_n)*(a.crent_area/sum(a.crent_area)over(partition by b.the_month,b.projectguid,b.contractid)) as mng_income_n
 ,double(b.tg_income_n)*(a.crent_area/sum(a.crent_area)over(partition by b.the_month,b.projectguid,b.contractid)) as tg_income_n
 ,case when b.rentaltype not in ('Main')  then double(b.saleamt)*(a.crent_area/sum(a.crent_area)over(partition by b.the_month,b.projectguid,b.contractid))  else 0 end as saleamt_zn
from (select * from app.a05_month_unit where unittype in ('MainShop','SpecialShop','Unittype') )a
left join (select * from app.a05_month_contract where rentaltype in ('Main','SingleCabinet','Site','SubAnchor','Exclusive')) b
on a.contractid=b.contractid and a.the_month=b.the_month
and   a.projectguid=b.projectguid
left join dim.pub_longfor_project_temp_sysmartbi d
on a.projectguid=d.projectguid
)a
group by a.the_month
 ,a.projectguid
 ,a.companyguid
 ,a.build_id
 ,a.build_name
 ,a.floor_id
 ,a.floor_name
) b
on 1=1 --笛卡尔积
where a.the_month>=b.the_month 
group by 
 a.the_month                                          --年月                               
,b.projectguid                                        --项目guid
,b.companyguid                                        --公司guid
,b.blockid                                            --楼栋id
,b.blockname                                          --楼栋名称
,b.floorid                                            --楼层id
,b.floor                                              --楼层名称
),
tmp_a05_month_unit as (
select 
 a.the_month                          --年月                   
,b.projectguid                        --项目guid
,b.companyguid                        --公司guid
,b.build_id                           --楼栋id
,b.build_no                           --楼栋编号
,b.build_name                         --楼栋名称
,b.floor_id                           --楼层id
,b.floor_no                           --楼层编号
,b.floor_name                         --楼层名称
,sum(case when a.the_month = b.the_month then b.crent_area else '0' end)                as crent_area             --可出租面积
,sum(case when a.year_str = substr(b.the_month,1,4) and substr(b.the_month,1,7)>=substr(b.projectopen_date,1,7) then b.crent_area else '0' end)     as crent_area_total       --累计可出租面积
,sum(case when a.the_month = b.the_month then b.crent_area_zn else '0' end)             as crent_area_zn          --不含主力店可出租面积
,sum(case when a.year_str = substr(b.the_month,1,4) and substr(b.the_month,1,7)>=substr(b.projectopen_date,1,7)   then b.crent_area_zn else '0' end)  as crent_area_zn_total    --累计不含主力店可出租面积
,sum(case when a.the_month = b.the_month then b.rentarea else '0' end)                  as rentarea               --已出租面积
,sum(case when a.year_str = substr(b.the_month,1,4)  and substr(b.the_month,1,7)>=substr(b.projectopen_date,1,7) then b.rentarea else '0' end)       as rentarea_total         --累计已出租面积
,sum(case when a.the_month = b.the_month then b.jparea else '0' end)                    as jparea                 --接铺面积
,sum(case when a.year_str = substr(b.the_month,1,4) and substr(b.the_month,1,7)>=substr(b.projectopen_date,1,7)   then b.jparea else '0' end)         as jparea_total           --累计接铺面积
,sum(case when a.the_month = b.the_month then b.openarea else '0' end)                  as openarea               --开业面积
,sum(case when a.year_str = substr(b.the_month,1,4) and substr(b.the_month,1,7)>=substr(b.projectopen_date,1,7)  then b.openarea else '0' end)       as openarea_total         --累计开业面积
,sum(case when a.the_month = b.the_month    then b.k_area else '0' end)                    as k_area                 --空置面积
,sum(case when a.year_str = substr(b.the_month,1,4)  and substr(b.the_month,1,7)>=substr(b.projectopen_date,1,7) then b.k_area else '0' end)         as k_area_total           --累计空置面积
,sum(case when a.the_month = b.the_month then b.unit_fmr else '0' end)                  as unit_fmr               --资源fmr
,sum(case when a.year_str = substr(b.the_month,1,4) then b.unit_fmr else '0' end)       as unit_fmr_total         --累计资源fmr
from(
select 
a.year_str
,a.the_month
,a.month_int
from ${HIVE_DB_DIM}.pub_longfor_month a
where a.the_month>=substr(add_months('${START_DATEKEY}',-2),1,7)
and a.the_month<=substr(add_months('${END_DATEKEY}',-1),1,7)
) a
left join (
select
 a.the_month                            --年月                   
,a.projectguid                          --项目guid
,a.companyguid                          --公司guid
,b.projectopen_date                     --项目开业时间
,a.build_id                             --楼栋id
,a.build_no                             --楼栋编号
,a.build_name                           --楼栋名称
,a.floor_id                             --楼层id
,a.floor_no                             --楼层编号
,a.floor_name                           --楼层名称
,sum(a.crent_area)        as crent_area --可出租面积
,sum(case when a.unittype not in ('Main','Exclusive','SubAnchor')  then a.crent_area  else 0 end ) as  crent_area_zn  --不含主力店可出租面积
,sum(a.rentarea  )        as rentarea   --已出租面积
,sum(a.jparea    )        as jparea     --接铺面积
,sum(a.openarea    )      as openarea   --开业面积
,sum(a.k_area    )        as k_area     --空置面积
,sum(a.unit_fmr    )      as unit_fmr   --资源fmr
from ${HIVE_DB_APP}.a05_month_unit a
  left  join  ${HIVE_DB_DIM}.pub_longfor_project_temp_sysmartbi b
    on a.projectguid=b.projectguid
where a.unittype in ('MainShop','SpecialShop','Unittype1')
group by 
 a.the_month                                        
,a.projectguid                        
,a.companyguid                        
,a.build_id                           
,a.build_no                           
,a.build_name                         
,a.floor_id                           
,a.floor_no                           
,a.floor_name
,b.projectopen_date
) b  where a.the_month>=b.the_month
group by
 a.the_month                                         
,b.projectguid                        
,b.companyguid                        
,b.build_id                           
,b.build_no                           
,b.build_name                         
,b.floor_id                           
,b.floor_no                           
,b.floor_name 
)
insert overwrite table ${HIVE_DB_APP}.a05_month_floor partition (datekey)
select 
 tmp_a05_month_contract.the_month
,tmp_a05_month_contract.projectguid
,c.city
,c.province
,c.district_name
,tmp_a05_month_contract.companyguid
,c.companyname
,c2.blockid
,c1.blockno
,c1.blockname
,c2.floorid
,c2.floorno
,c2.floor
,tmp_a05_month_contract.saleamt
,tmp_a05_month_contract.saleamt_total
,tmp_a05_month_contract.saleamt_zn
,tmp_a05_month_contract.saleamt_zn_total
,tmp_a05_month_unit.crent_area
,tmp_a05_month_unit.crent_area_total
,tmp_a05_month_unit.crent_area_zn
,tmp_a05_month_unit.crent_area_zn_total
,tmp_a05_month_unit.rentarea
,tmp_a05_month_unit.rentarea_total
,tmp_a05_month_unit.jparea
,tmp_a05_month_unit.jparea_total
,tmp_a05_month_unit.openarea
,tmp_a05_month_unit.openarea_total
,tmp_a05_month_unit.k_area
,tmp_a05_month_unit.k_area_total
,tmp_a05_month_unit.unit_fmr
,tmp_a05_month_unit.unit_fmr_total
,tmp_a05_month_contract.bd_income_y
,tmp_a05_month_contract.bd_income_y_total
,tmp_a05_month_contract.taking_income_y
,tmp_a05_month_contract.taking_income_y_total
,tmp_a05_month_contract.mng_income_y
,tmp_a05_month_contract.mng_income_y_total
,tmp_a05_month_contract.tg_income_y
,tmp_a05_month_contract.tg_income_y_total
,tmp_a05_month_contract.bd_income_n
,tmp_a05_month_contract.bd_income_n_total
,tmp_a05_month_contract.taking_income_n
,tmp_a05_month_contract.taking_income_n_total
,tmp_a05_month_contract.mng_income_n
,tmp_a05_month_contract.mng_income_n_total
,tmp_a05_month_contract.tg_income_n
,tmp_a05_month_contract.tg_income_n_total
,from_unixtime(unix_timestamp(), 'yyyy-MM-dd HH:mm:ss') as op_time
,'${EXECUTION_ID}' as execution_id
,'${CURRENT_FLOW_START_DAY}' as load_date
,tmp_a05_month_contract.the_month as datekey
from tmp_a05_month_contract
left join tmp_a05_month_unit
on   tmp_a05_month_contract.the_month = tmp_a05_month_unit.the_month
and  tmp_a05_month_contract.projectguid = tmp_a05_month_unit.projectguid
and  tmp_a05_month_contract.blockid   = tmp_a05_month_unit.build_id
and  tmp_a05_month_contract.floor_id   = tmp_a05_month_unit.floor_id
left join ${HIVE_DB_DIM}.pub_longfor_project_temp_sysmartbi c
on   tmp_a05_month_contract.projectguid =c.projectguid
left  join  ${HIVE_DB_DIM}.d05_longfor_floor c2
on   tmp_a05_month_contract.floor_id=c2.floorid
left  join  ${HIVE_DB_DIM}.d05_longfor_block  c1
on c2.blockid=c1.blockid
where
tmp_a05_month_contract.the_month>=substr(add_months('${START_DATEKEY}',-1),1,7)
and tmp_a05_month_contract.the_month<=substr(add_months('${END_DATEKEY}',-1),1,7)
and (cast(substr('${END_DATEKEY}',9,2) as int)=6 or   cast(substr('${END_DATEKEY}',9,2) as int)=11 )
;
"
task_incre_type=multi-day
