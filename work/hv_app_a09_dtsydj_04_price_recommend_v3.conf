sql="
use ${HIVE_DB_APP};
set hive.exec.dynamic.partition.mode=nonstrict;
set mapreduce.map.memory.mb=16384;
set mapreduce.reduce.memory.mb=16384;
insert overwrite table app.a09_dtsydj_04_price_recommend_v3  partition (datekey)

select
 '${END_DATEKEY}' as date_long
,b.companyguid
,b.companyname
,b.projectguid
,b.projectname
,b.fqguid
,b.fqname
,b.room_house_type_id as room_house_type
,b.room_id
,b.room_construction_area   -------面积
,b.project_floor_price as room_floor_price   --------投模价
,b.room_floor_price as room_rent_price   --------房间的投模价
,case when nvl(e.is_adjust,0)<>1 then '-'
      when nvl(e.is_adjust,0)=1 and datediff('${END_DATEKEY}',f.last_adjust_time)>=3
           and f.recommend_price<1.3*b.project_floor_price
           and f.recommend_price>0.8*b.project_floor_price then '${END_DATEKEY}'
      else f.last_adjust_time end as last_adjust_time
,c.range
,case when nvl(e.is_adjust,0)<>1 then b.room_floor_price
      when nvl(e.is_adjust,0)=1 and datediff('${END_DATEKEY}',f.last_adjust_time)>=3
           and f.recommend_price<1.3*b.project_floor_price
           and f.recommend_price>0.8*b.project_floor_price then f.recommend_price+c.range
  else f.recommend_price end as recommend_price
,from_unixtime(unix_timestamp(), 'yyyy-MM-dd HH:mm:ss') as op_time
,'${EXECUTION_ID}' as execution_id
,'${CURRENT_FLOW_START_DAY}' as load_date
,'${END_DATEKEY}' as datekey
from (select * from app.a09_dtsydj_details where date_long='${START_DATEKEY}') b
left join (select * from app.a09_dtsydj_02_price_adjust_v3 where datekey='${START_DATEKEY}') c on b.fqguid=c.fqguid and b.room_house_type_id=c.room_house_type
left join (select * from dwd_dim.dim_dtsydj_project_isadjust_tmp where is_adjust=1) e on b.fqguid=e.fqguid and b.room_id=e.room_id
left join (
select * from app.a09_dtsydj_04_price_recommend_v3 where datekey='${START_DATEKEY}'
) f on f.fqguid=b.fqguid and f.room_house_type=b.room_house_type_id and b.room_id=f.room_id



"
task_incre_type=multi-day