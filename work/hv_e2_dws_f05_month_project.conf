sql="
-- 修改日期：
-- 版本号：
-- 修改人：张朋飞
-- 变更内容：

use dws;
set hive.exec.dynamic.partition.mode=nonstrict;
set hive.exec.max.dynamic.partitions=100000;
set hive.exec.max.dynamic.partitions.pernode=100000;
set hive.exec.parallel=true;
set hive.exec.parallel.thread.number=8;
with date1 as (
select
the_month
,case when  the_month=substr('${END_DATEKEY}',1,7) and   cast(substr('${END_DATEKEY}',9,2) as int)<>1  then  date_sub('${END_DATEKEY}',1)
else   last_day_of_month  end  as last_day_of_month
from  dim.pub_longfor_month
where (the_month<=substr(date_sub('${END_DATEKEY}',1),1,7)
and the_month>=substr(add_months('${START_DATEKEY}',-1),1,7)   )
)
insert overwrite table ${HIVE_DB_DWS}.f05_month_project partition  (datekey)
select
a.the_month
,a.month_days
,a.projectguid
,a.companyguid
,a.projectopen_date
,a.project_building_area
,a.crent_area
,a.rentarea
,a.jparea
,a.openarea
,a.k_area
,a.bg_jparea
,a.bdamt_y
,a.ccamt_y
,a.wgamt_y
,a.tgamt_y
,a.syamt_y
,a.bdamt_n
,a.ccamt_n
,a.wgamt_n
,a.tgamt_n
,a.syamt_n
,a.bd_income_y
,a.taking_income_y
,a.mng_income_y
,a.tg_income_y
,a.bd_income_n
,a.taking_income_n
,a.mng_income_n
,a.tg_income_n
,a.calculatetraffic       --当月总客流
,a.last_customer          --去年年日均客流
,h.increase_membernum     --当月新增会员数
,h.total_membernum        --当前累计会员总数
,h.last_total_member      --上年年末会员总数
,j.mem_num                 --有车会员数
,k.member_sale_amt        --会员营业额
,k.sale_count             --会员营业额次数
,k.member_sale_amt_nb     --不含超市百货会员营业额
,k.sale_count_nb          --不含超市百货消费总次数
,k.bonus_amt              --当月新增积分额
,h.bonuscurr              --当前积分额
,nvl(redem.redeem_amt,0)  as redeem_amt  --消耗积分
,0                    as  kpi_increase   --新增会员量KPI
,0                     as kpi_yearincrease
,0                   as   kpi_membersale    --会员消费占比KPI
,0                    as kpi_yearmembersale
,0                   as   kpi_active_rate    --会员活跃度占比
,0                      as kpi_yearactive_rate
,cs1.yxbssl              --报事数量
,cs1.wcbssl              --完成数量
,h1.area                 --空调面积
,energy.realenergy           --实际能耗
,energy.planenergy           --预算能耗
,sum(unit.bgrent_amt)  as bgrent_amt
,sum(unit.bgmng_amt)   as bgmng_amt
,sum(unit.bgpromotion_amt)  as bgpromotion_amt
,sum(unit.bgfmr_amt)   as bgfmr_amt
,sum(unit.bgrevenue_amt) as bgrevenue_amt
,sum(unit.rentamt)     as rentamt
,sum(unit.takingamt)   as takingamt
,sum(unit.mngamt)       as mngamt
,sum(unit.promotionamt)  as promotionamt
,sum(unit.fmramt)        as fmramt
,sum(unit.unit_fmr)      as unit_fmr
,from_unixtime(unix_timestamp(), 'yyyy-MM-dd HH:mm:ss') as op_time
,'${EXECUTION_ID}' as execution_id
,'${CURRENT_FLOW_START_DAY}' as load_date
,a.the_month  as datekey
from(
select

a.*
,substr(a.the_date,1,7) as the_month
from(
select
 the_date  
,month_days
,projectguid
,companyguid
,projectopen_date
,project_building_area
,crent_area
,rentarea
,jparea
,openarea as openarea
,k_area
,bg_jparea
,sum(bdamt_y) over(partition by substr(the_date,1,7),projectguid,companyguid )   as bdamt_y
,sum(ccamt_y) over(partition by substr(the_date,1,7),projectguid,companyguid )   as ccamt_y
,sum(wgamt_y) over(partition by substr(the_date,1,7),projectguid,companyguid )   as wgamt_y
,sum(tgamt_y) over(partition by substr(the_date,1,7),projectguid,companyguid )   as tgamt_y
,sum(syamt_y) over(partition by substr(the_date,1,7),projectguid,companyguid )   as syamt_y
,sum(bdamt_n) over(partition by substr(the_date,1,7),projectguid,companyguid )   as bdamt_n
,sum(ccamt_n) over(partition by substr(the_date,1,7),projectguid,companyguid )   as ccamt_n
,sum(wgamt_n) over(partition by substr(the_date,1,7),projectguid,companyguid )   as wgamt_n
,sum(tgamt_n) over(partition by substr(the_date,1,7),projectguid,companyguid )   as tgamt_n
,sum(syamt_n) over(partition by substr(the_date,1,7),projectguid,companyguid )   as syamt_n
,sum(bd_income_y) over(partition by substr(the_date,1,7),projectguid,companyguid ) as bd_income_y
,sum(taking_income_y) over(partition by substr(the_date,1,7),projectguid,companyguid ) as taking_income_y
,sum(mng_income_y) over(partition by substr(the_date,1,7),projectguid,companyguid ) as mng_income_y
,sum(tg_income_y) over(partition by substr(the_date,1,7),projectguid,companyguid ) as tg_income_y
,sum(bd_income_n) over(partition by substr(the_date,1,7),projectguid,companyguid ) as bd_income_n
,sum(taking_income_n) over(partition by substr(the_date,1,7),projectguid,companyguid ) as taking_income_n
,sum(mng_income_n) over(partition by substr(the_date,1,7),projectguid,companyguid ) as mng_income_n
,sum(tg_income_n) over(partition by substr(the_date,1,7),projectguid,companyguid ) as tg_income_n
,sum(calculatetraffic) over(partition by substr(the_date,1,7),projectguid,companyguid ) as calculatetraffic
,last_customer
from ${HIVE_DB_DWS}.f05_project   -----------------------------
where version_code='initversion'
and substr(the_date,1,7)<=substr('${END_DATEKEY}',1,7)
and substr(the_date,1,7)>=substr(add_months('${START_DATEKEY}',-1),1,7)
)a
inner  join date1 b on (a.the_date=b.last_day_of_month)
) a
left join ${HIVE_DB_DIM}.pub_longfor_project_temp_sysmartbi b
on a.projectguid=b.projectguid
left join    ${HIVE_DB_DWD_SYSMARTBI}.sysmartbi_bsbxwcl cs1
on  a.the_month=cs1.month
and cs1.xmcc=b.projectname
left join(SELECT
unit.the_month
,unit.projectguid
,sum(unit.bgrent_amt)  as bgrent_amt
,sum(unit.bgmng_amt)   as bgmng_amt
,sum(unit.bgpromotion_amt)  as bgpromotion_amt
,sum(unit.bgfmr_amt)   as bgfmr_amt
,sum(unit.bgrevenue_amt) as bgrevenue_amt
,sum(unit.rentamt)     as rentamt
,sum(unit.takingamt)   as takingamt
,sum(unit.mngamt)       as mngamt
,sum(unit.promotionamt)  as promotionamt
,sum(unit.fmramt)        as fmramt
,sum(unit.unit_fmr)      as unit_fmr
FROM  ${HIVE_DB_DWS}.f05_month_unit unit
group by    unit.the_month
,unit.projectguid
)     unit
on a.projectguid=unit.projectguid
and a.the_month=unit.the_month
left join ${HIVE_DB_DIM}.d05_longfor_sysmartbi_energy_area   h1
on    a.projectguid=h1.projectguid
left join ${HIVE_DB_DWD_SYSMARTBI}.sysmartbi_energy_consumption energy
on a.projectguid=energy.projectguid
and a.the_month=energy.the_month
left join (
select
a.projguid, -- 新增会员数\累计会员
t.the_month,
 sum(case when t.the_month=substr(a.createtime,1,7)  and a.take_effect='1'  then 1 else 0 end) as increase_membernum
,sum(case when   a.take_effect='1'  then 1 else 0 end )    as total_membernum,
sum(case when substr(a.createtime,1,4)<substr(t.the_month,1,4) and   a.take_effect='1' then 1 else 0 end) as last_total_member,
sum(case when t.the_month>='2018-12' then a.bonuscurr else 0 end   ) as bonuscurr
from date1 t
left join ${HIVE_DB_DIM}.d05_longfor_member a on (1=1 )
where t.the_month>=substr(a.createtime,1,7)
group by a.projguid
,t.the_month
) h
on a.projectguid = h.projguid
and a.the_month = h.the_month
left join (
select
t.the_month, -- 本月有车会员数
a.projguid,
count(distinct  a.member_id) as mem_num
from date1  t
left join ${HIVE_DB_DIM}.d05_longfor_member a
on  1 = 1  and a.take_effect='1'
left join ${HIVE_DB_DWD_SYSMARTBI}.sysmartbi_m_membcarno a1
on a.member_id = a1.membid
where  substr(a.createtime,1,7) <=t.the_month
and
a1.carno REGEXP '^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-Z0-9]{4}[A-Z0-9挂学警港澳]{1}$'
and a1.carno is not null
group by a.projguid, t.the_month

)j
on a.projectguid=j.projguid
and a.the_month =j.the_month
left join ( select
 substr(the_date,1,7) as the_month
 ,project_guid
 ,sum(sale_amt)            as  member_sale_amt   --会员营业额
 ,count(1)                 as  sale_count        --会员营业额次数
 ,sum(case when formatid not in ('FCC7C6AD-D2D2-9475-4933-59126BAEF919','28D897EA-AC99-1488-5A53-3D97E139C820','EC45EF90-0C6A-D45B-EAA7-48A0C8784DED','00E9FFE2-29C0-F414-990A-E99E4FD014B4','CF3C476C-CC71-041F-5AB2-FD8F106E1432','391A0CCF-F361-84CE-BBA5-831CD1C9DE13','016A993F-F06D-646F-F943-DD6DD8D54567','4E99132D-D663-E4AE-590C-77654E3DD7B4','EB2CF3D9-9F3E-4447-5BD0-EE4A63D691AB') 
 then sale_amt
 else 0 end)  as member_sale_amt_nb  --不含超市百货会员营业额
 ,count(case when formatid not in ('FCC7C6AD-D2D2-9475-4933-59126BAEF919','28D897EA-AC99-1488-5A53-3D97E139C820','EC45EF90-0C6A-D45B-EAA7-48A0C8784DED','00E9FFE2-29C0-F414-990A-E99E4FD014B4','CF3C476C-CC71-041F-5AB2-FD8F106E1432','391A0CCF-F361-84CE-BBA5-831CD1C9DE13','016A993F-F06D-646F-F943-DD6DD8D54567','4E99132D-D663-E4AE-590C-77654E3DD7B4','EB2CF3D9-9F3E-4447-5BD0-EE4A63D691AB') 
 then 1 
 else null end)  as sale_count_nb    --不含超市百货消费总次数
 ,sum(bonus_amt)  as bonus_amt       --当月新增积分额
 from  ${HIVE_DB_DWS}.f05_longfor_member_sale
 where substr(the_date,1,7)<=substr('${END_DATEKEY}',1,7)
 and substr(the_date,1,7)>=substr(add_months('${START_DATEKEY}',-1),1,7)
 and !(adjustdesc is not null 
 and entryby  like 'WeChat%'
 and sale_amt =0 
 and bonus_amt < 0)
 GROUP BY substr(the_date,1,7)
 ,project_guid
 ) k
on a.projectguid = k.project_guid
and a.the_month = k.the_month
left join (select
substr(the_date,1,7) as the_month
,sum(redeem_amt)  as redeem_amt
,project_guid
from  ${HIVE_DB_DWS}.f05_longfor_member_redeem
where  substr(the_date,1,7)<=substr('${END_DATEKEY}',1,7)
 and substr(the_date,1,7)>=substr(add_months('${START_DATEKEY}',-1),1,7)
group by substr(the_date,1,7)
,project_guid)redem
on redem.the_month=a.the_month
and redem.project_guid=a.projectguid
where  a.projectguid is not null and a.projectguid <>'-'
group by  a.the_month
  ,a.month_days
  ,a.projectguid
  ,a.companyguid
  ,a.projectopen_date
  ,a.project_building_area
  ,a.crent_area
  ,a.rentarea
  ,a.jparea
  ,a.openarea
  ,a.k_area
  ,a.bg_jparea
  ,a.bdamt_y
  ,a.syamt_y
  ,a.bdamt_n
  ,a.ccamt_n
  ,a.ccamt_y
  ,a.wgamt_y
  ,a.tgamt_y
  ,a.wgamt_n
  ,a.tgamt_n
  ,a.syamt_n
  ,redem.redeem_amt
  ,a.bd_income_y
  ,a.taking_income_y
  ,a.mng_income_y
  ,a.tg_income_y
  ,a.bd_income_n
  ,a.taking_income_n
  ,a.mng_income_n
  ,a.tg_income_n
  ,a.calculatetraffic       --当月总客流
  ,a.last_customer          --去年年日均客流
  ,h.increase_membernum     --当月新增会员数
  ,h.total_membernum        --当前累计会员总数
  ,h.last_total_member      --上年年末会员总数
  ,j.mem_num                 --有车会员数
  ,k.member_sale_amt        --会员营业额
  ,k.sale_count             --营业额次数
  ,k.bonus_amt              --当月新增积分额
  ,k.member_sale_amt_nb     --不含超市百货会员营业额
  ,k.sale_count_nb          --不含超市百货消费总次数
  ,h.bonuscurr              --当前积分额
  ,cs1.yxbssl              --报事数量
  ,cs1.wcbssl              --完成数量
  ,h1.area                 --空调面积
  ,energy.realenergy           --实际能耗
  ,energy.planenergy           --预算能耗
  ;
    "
task_incre_type=multi-day